name: Release

# on:
#   release:
#     types: [created]
#   # pull_request:
#   #   branches: [development]
on:
  push:
    branches:
      - "*"
      # - "development"
  pull_request:
    branches: [development]

jobs:
  # release:
  #   name: ${{ matrix.target }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       target: [x86_64-unknown-linux-gnu,x86_64-unknown-linux-musl]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1
  #     - name: Install rust
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         profile: minimal
  #         override: true
  #         target: ${{ matrix.target }}

  #     - name: Build target
  #       uses: actions-rs/cargo@v1
  #       with:
  #         use-cross: true
  #         command: build
  #         args: --release --target ${{ matrix.target }}

  #     - name: Package
  #       shell: bash
  #       run: |
  #         #strip target/${{ matrix.target }}/release/med
  #         cd target/${{ matrix.target }}/release          
  #         tar czvf ../../../med-${{ matrix.target }}.tar.gz med
  #         cd -
  #     - name: Publish
  #       uses: softprops/action-gh-release@v1
  #       with:
  #           tag_name: ${{ github.ref_name }}
  #           files: 'med*'
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # windows-msvc-release:
  #   name: release windows msvc
  #   runs-on: windows-latest
  #   steps:
  #     - name: Check Out Code
  #       uses: actions/checkout@master
  #     - name: Build
  #       run: |
  #         cargo build --release
  #     - name: tar
  #       run: tar --directory=target/release -cf win_msvc_archive.tar.gz med.exe
  #     - name: Upload binaries to release  
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         tag_name: ${{ github.ref_name }}
  #         files: 'win_msvc_archive.tar.gz'
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  macos-release:
    name: Mac ${{ matrix.target }}
    runs-on: macos-latest
    strategy:
      fail-fast: true
      matrix:
        target: [aarch64-apple-darwin,x86_64-apple-darwin]
    steps:
      - uses: actions/checkout@master
      - name: check toolchain
        run: rustup default
      - name: Prepare the target
        run: |
          rustup toolchain install stable-aarch64-apple-darwin
          rustup target add aarch64-apple-darwin
          rustup toolchain install x86_64-apple-darwin
          rustup target add x86_64-apple-darwin
          # cargo build --release --target aarch64-apple-darwin

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
  
      - name: tar
        run: tar --directory=target/${{matrix.target}}/release -cf ${{matrix.target}}_archive.tar.gz med
      - name: Upload binaries to release  
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: '${{matrix.target}}_archive.tar.gz'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}