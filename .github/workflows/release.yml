name: Release

on:
  pull_request:
    branches: [main]

jobs:
  crate_metadata:
    name: Extract crate metadata
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Extract crate information
      id: crate_metadata
      run: |
        cargo metadata --no-deps --format-version 1 | jq -r '"name=" + .packages[0].name' | tee -a $GITHUB_OUTPUT
        cargo metadata --no-deps --format-version 1 | jq -r '"version=" + .packages[0].version' | tee -a $GITHUB_OUTPUT
        cargo metadata --no-deps --format-version 1 | jq -r '"maintainer=" + .packages[0].authors[0]' | tee -a $GITHUB_OUTPUT
        cargo metadata --no-deps --format-version 1 | jq -r '"homepage=" + .packages[0].homepage' | tee -a $GITHUB_OUTPUT
    outputs:
        name: ${{ steps.crate_metadata.outputs.name }}
        version: ${{ steps.crate_metadata.outputs.version }}
        maintainer: ${{ steps.crate_metadata.outputs.maintainer }}
        homepage: ${{ steps.crate_metadata.outputs.homepage }}
  
  unit-test:
    runs-on: ubuntu-latest
    needs: crate_metadata
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          args: '-- --test-threads 2'
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
  
  build-release:
    name: ${{ matrix.target }}
    runs-on: ubuntu-latest
    needs: [crate_metadata, unit-test]
    strategy:
      fail-fast: true
      matrix:
        target: [x86_64-unknown-linux-gnu,x86_64-unknown-linux-musl]
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Package
        shell: bash
        run: |
          cp -R demo target/${{ matrix.target }}/release
          cd target/${{ matrix.target }}/release
          mkdir med-${{ needs.crate_metadata.outputs.version }}
          mv med med-${{ needs.crate_metadata.outputs.version }}
          tar czvf ../../../med-${{ matrix.target }}-${{ needs.crate_metadata.outputs.version }}.tar.gz med-${{ needs.crate_metadata.outputs.version }} demo/
          cd -
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
            tag_name: ${{ needs.crate_metadata.outputs.version }}
            files: 'med*'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows-msvc-release:
    name: release windows msvc
    runs-on: windows-latest
    needs: [crate_metadata, unit-test]
    steps:
      - name: Check Out Code
        uses: actions/checkout@master
      - name: Build
        run: |
          cargo build --release
      - name: tar
        run: |
          # $pwd
          # New-Item -Path "D:\a\rust-cli-med\rust-cli-med\target\release" -Name "demo" -ItemType Directory
          # Copy-Item 'D:\a\rust-cli-med\rust-cli-med\demo\*' -Destination 'D:\a\rust-cli-med\rust-cli-med\target\release\demo\' -Recurse -Force
          # tar --directory=target/release -cf med-0.6.2-x86_64-windows-msvc.tar.gz med.exe
          Compress-Archive -Path D:\a\rust-cli-med\rust-cli-med\target\release\med.exe -DestinationPath D:\a\rust-cli-med\rust-cli-med\med-${{ needs.crate_metadata.outputs.version }}-x86_64-windows-msvc.zip
          # Get-ChildItem 
      - name: Upload binaries to release  
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.crate_metadata.outputs.version }}
          files: 'med-${{ needs.crate_metadata.outputs.version }}-x86_64-windows-msvc.zip'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  macos-X86_64-release:
    name: release macos x86_64 release
    runs-on: macos-latest
    needs: [crate_metadata, unit-test]
    steps:
      - uses: actions/checkout@master
      - name: check toolchain
        run: rustup default
      - name: Build
        run: |
          cargo build --release
      - name: tar
        run: |
          cp -R demo target/release/ 
          mkdir target/release/med-${{ needs.crate_metadata.outputs.version }}
          mv target/release/med target/release/med-${{ needs.crate_metadata.outputs.version }}
          tar --directory=target/release -cf med-macos_x86_64-archive-${{ needs.crate_metadata.outputs.version }}.tar.gz med-${{ needs.crate_metadata.outputs.version }} demo/
      - name: Upload binaries x86_64 to release  
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.crate_metadata.outputs.version }}
          files: 'med-macos_x86_64-archive-${{ needs.crate_metadata.outputs.version }}.tar.gz'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
  macos-arm-release:
    name: release macos arm release
    runs-on: macos-latest
    needs: [crate_metadata, unit-test]
    steps:
      - uses: actions/checkout@master
      - name: check toolchain
        run: rustup default
      - name: Build
        run: |
          rustup toolchain install stable-aarch64-apple-darwin
          rustup target add aarch64-apple-darwin
          cargo build --release --target aarch64-apple-darwin
      - name: tar
        run: |
          cp -R demo target/aarch64-apple-darwin/release
          mkdir target/aarch64-apple-darwin/release/med-${{ needs.crate_metadata.outputs.version }}
          mv target/aarch64-apple-darwin/release/med target/aarch64-apple-darwin/release/med-${{ needs.crate_metadata.outputs.version }}
          tar --directory=target/aarch64-apple-darwin/release -cf macos_arm_archive-${{ needs.crate_metadata.outputs.version }}.tar.gz med-${{ needs.crate_metadata.outputs.version }} demo/
      - name: Upload binaries arm to release  
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.crate_metadata.outputs.version }}
          files: 'macos_arm_archive-${{ needs.crate_metadata.outputs.version }}.tar.gz'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_release_notes:
    name: build release notes
    runs-on: ubuntu-latest
    needs: [crate_metadata, unit-test, macos-arm-release, macos-X86-release, windows-msvc-release, build-release]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: "Build Changelog"
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: "./build/changelog.config.json"      
      - name: Upload binaries arm to release  
        uses: softprops/action-gh-release@v1
        with:
            tag_name: ${{ needs.crate_metadata.outputs.version }}
            body: ${{ steps.build_changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}