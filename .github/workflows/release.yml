name: Release

# on:
#   release:
#     types: [created]

on:
  push:
    branches:
      - "*"
  pull_request:
    branches: [development]

jobs:
  # release:
  #   name: release ${{ matrix.target }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #         # - target: x86_64-pc-windows-gnu
  #         #   archive: tar.gz
  #         # - target: x86_64-unknown-linux-musl
  #         #   archive: tar.gz tar.xz
  #         - target: x86_64-apple-darwin
  #           archive: tar.gz
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Compile and release
  #       uses: rust-build/rust-build.action@v1.3.2
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         RUSTTARGET: ${{ matrix.target }}
  #         ARCHIVE_TYPES: ${{ matrix.archive }}
  #         TOOLCHAIN_VERSION: 1.69.0
  windows-msvc-release:
    name: release windows msvc
    runs-on: windows-latest
    steps:
      - name: Check Out Code
        uses: actions/checkout@master
      - name: Build
        run: |
          cargo build --release
      - name: tar
        run: tar --directory=target/release -cf archive.tar.gz med.exe
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./archive.tar.gz
          asset_name: archive.tar.gz
          asset_content_type: application/zip
  # macos-arm-release:
  #   name: release mac os arm release
  #   runs-on: macos-12
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: check toolchain
  #       run: rustup default
  #     - name: Build
  #       run: |
  #         rustup toolchain install stable-aarch64-apple-darwin
  #         rustup target add aarch64-apple-darwin
  #         cargo build --release --target aarch64-apple-darwin
  #     - name: tar
  #       run: tar --directory=target/aarch64-apple-darwin/release -cf archive.tar.gz med
  #     - name: upload
  #       run: |
  #         id=$(gh api -H "Accept: application/vnd.github+json" /repos/jayhuang75/rust-cli-med/releases/tags/${{ github.ref_name }} --jq .id)
  #         curl --fail-with-body -sS  -X POST --data-binary @"archive.tar.gz" -H 'Content-Type: application/octet-stream' -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://uploads.github.com/repos/jayhuang75/rust-cli-med/releases/$id/assets?name=med_${{ github.ref_name }}_aarch64-apple-darwin.tar.gz"
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}